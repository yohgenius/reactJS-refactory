["a97f94a007b604dbcbf38a8dd852885c8bdc22a6","be1ac23b1837a564737b3bf7264c706cbdd948ea",["defineLazyObjectProperty","Systrace","ExceptionsManager","BatchedBridge","JSTimersExecution","HeapCapture","SamplingProfiler","RCTLog","HMRClient","ErrorUtils","JSTimers","Alert","Promise","regenerator-runtime/runtime","XMLHttpRequest","FormData","fetch","WebSocket","Geolocation","Map","Set","setupDevtools","RCTDebugComponentOwnership","RCTRenderingPerf","JSInspector","NetworkAgent","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","PerformanceLogger"],[183,1416,1524,1624,1726,1836,1949,2061,2168,2302,2618,2799,3256,3365,3487,3632,3721,3802,3887,3974,4062,4152,4433,4515,4594,4711,4748,4792,4844,4898,5020,5150,5276],{"version":3,"sources":["/firstPro/node_modules/react-native/Libraries/Core/InitializeCore.js"],"names":["global","GLOBAL","undefined","window","defineLazyObjectProperty","require","defineProperty","object","name","getValue","eager","descriptor","Object","getOwnPropertyDescriptor","backupName","toUpperCase","substr","value","enumerable","writable","configurable","console","error","get","process","env","NODE_ENV","__DEV__","Systrace","setEnabled","__RCTProfileIsProfiling","ExceptionsManager","installConsoleErrorReporter","BatchedBridge","registerLazyCallableModule","registerCallableModule","__fbDisableExceptionsManager","handleError","e","isFatal","handleException","ee","log","message","ErrorUtils","setGlobalHandler","defineLazyTimer","alert","text","regeneratorRuntime","fetch","Headers","Request","Response","navigator","document","JSInspector","registerAgent"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule InitializeCore\n * @flow\n */\n\n/* eslint-disable strict */\n/* globals window: true */\n\n\n/**\n * Sets up global variables typical in most JavaScript environments.\n *\n *   1. Global timers (via `setTimeout` etc).\n *   2. Global console object.\n *   3. Hooks for printing stack traces with source maps.\n *\n * Leaves enough room in the environment for implementing your own:\n *\n *   1. Require system.\n *   2. Bridged modules.\n *\n */\n'use strict';\n\nif (global.GLOBAL === undefined) {\n  global.GLOBAL = global;\n}\n\nif (global.window === undefined) {\n  global.window = global;\n}\n\nconst defineLazyObjectProperty = require('defineLazyObjectProperty');\n\n/**\n * Sets an object's property. If a property with the same name exists, this will\n * replace it but maintain its descriptor configuration. By default, the property\n * will replaced with a lazy getter.\n *\n * The original property value will be preserved as `original[PropertyName]` so\n * that, if necessary, it can be restored. For example, if you want to route\n * network requests through DevTools (to trace them):\n *\n *   global.XMLHttpRequest = global.originalXMLHttpRequest;\n *\n * @see https://github.com/facebook/react-native/issues/934\n */\nfunction defineProperty<T>(\n  object: Object,\n  name: string,\n  getValue: () => T,\n  eager?: boolean\n): void {\n  const descriptor = Object.getOwnPropertyDescriptor(object, name);\n  if (descriptor) {\n    const backupName = `original${name[0].toUpperCase()}${name.substr(1)}`;\n    Object.defineProperty(object, backupName, {\n      ...descriptor,\n      value: object[name],\n    });\n  }\n\n  const {enumerable, writable, configurable} = descriptor || {};\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n\n  if (eager === true) {\n    Object.defineProperty(object, name, {\n      configurable: true,\n      enumerable: enumerable !== false,\n      writable: writable !== false,\n      value: getValue(),\n    });\n  } else {\n    defineLazyObjectProperty(object, name, {\n      get: getValue,\n      enumerable: enumerable !== false,\n      writable: writable !== false,\n    });\n  }\n}\n\n// Set up process\nglobal.process = global.process || {};\nglobal.process.env = global.process.env || {};\nif (!global.process.env.NODE_ENV) {\n  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';\n}\n\n// Set up profile\nconst Systrace = require('Systrace');\nSystrace.setEnabled(global.__RCTProfileIsProfiling || false);\n\n// Set up console\nconst ExceptionsManager = require('ExceptionsManager');\nExceptionsManager.installConsoleErrorReporter();\n\n// TODO: Move these around to solve the cycle in a cleaner way\nconst BatchedBridge = require('BatchedBridge');\nBatchedBridge.registerLazyCallableModule('Systrace', () => require('Systrace'));\nBatchedBridge.registerLazyCallableModule('JSTimersExecution', () => require('JSTimersExecution'));\nBatchedBridge.registerLazyCallableModule('HeapCapture', () => require('HeapCapture'));\nBatchedBridge.registerLazyCallableModule('SamplingProfiler', () => require('SamplingProfiler'));\nBatchedBridge.registerLazyCallableModule('RCTLog', () => require('RCTLog'));\n\nif (__DEV__) {\n  if (!global.__RCTProfileIsProfiling) {\n    BatchedBridge.registerCallableModule('HMRClient', require('HMRClient'));\n  }\n}\n\n// Set up error handler\nif (!global.__fbDisableExceptionsManager) {\n  const handleError = (e, isFatal) => {\n    try {\n      ExceptionsManager.handleException(e, isFatal);\n    } catch (ee) {\n      /* eslint-disable no-console-disallow */\n      console.log('Failed to print error: ', ee.message);\n      /* eslint-enable no-console-disallow */\n      throw e;\n    }\n  };\n\n  const ErrorUtils = require('ErrorUtils');\n  ErrorUtils.setGlobalHandler(handleError);\n}\n\n// Set up timers\nconst defineLazyTimer = name => {\n  defineProperty(global, name, () => require('JSTimers')[name]);\n};\ndefineLazyTimer('setTimeout');\ndefineLazyTimer('setInterval');\ndefineLazyTimer('setImmediate');\ndefineLazyTimer('clearTimeout');\ndefineLazyTimer('clearInterval');\ndefineLazyTimer('clearImmediate');\ndefineLazyTimer('requestAnimationFrame');\ndefineLazyTimer('cancelAnimationFrame');\ndefineLazyTimer('requestIdleCallback');\ndefineLazyTimer('cancelIdleCallback');\n\n// Set up alert\nif (!global.alert) {\n  global.alert = function(text) {\n    // Require Alert on demand. Requiring it too early can lead to issues\n    // with things like Platform not being fully initialized.\n    require('Alert').alert('Alert', '' + text);\n  };\n}\n\n// Set up Promise\n// The native Promise implementation throws the following error:\n// ERROR: Event loop not supported.\ndefineProperty(global, 'Promise', () => require('Promise'));\n\n// Set up regenerator.\ndefineProperty(global, 'regeneratorRuntime', () => {\n  // The require just sets up the global, so make sure when we first\n  // invoke it the global does not exist\n  delete global.regeneratorRuntime;\n  require('regenerator-runtime/runtime');\n  return global.regeneratorRuntime;\n});\n\n// Set up XHR\n// The native XMLHttpRequest in Chrome dev tools is CORS aware and won't\n// let you fetch anything from the internet\ndefineProperty(global, 'XMLHttpRequest', () => require('XMLHttpRequest'));\ndefineProperty(global, 'FormData', () => require('FormData'));\n\ndefineProperty(global, 'fetch', () => require('fetch').fetch);\ndefineProperty(global, 'Headers', () => require('fetch').Headers);\ndefineProperty(global, 'Request', () => require('fetch').Request);\ndefineProperty(global, 'Response', () => require('fetch').Response);\ndefineProperty(global, 'WebSocket', () => require('WebSocket'));\n\n// Set up Geolocation\nlet navigator = global.navigator;\nif (navigator === undefined) {\n  global.navigator = navigator = {};\n}\n\n// see https://github.com/facebook/react-native/issues/10881\ndefineProperty(navigator, 'product', () => 'ReactNative', true);\ndefineProperty(navigator, 'geolocation', () => require('Geolocation'));\n\n// Set up collections\n// We can't make these lazy because `Map` checks for `global.Map` (which wouldc\n// not exist if it were lazily defined).\ndefineProperty(global, 'Map', () => require('Map'), true);\ndefineProperty(global, 'Set', () => require('Set'), true);\n\n// Set up devtools\nif (__DEV__) {\n  if (!global.__RCTProfileIsProfiling) {\n    // not when debugging in chrome\n    // TODO(t12832058) This check is broken\n    if (!window.document) {\n      require('setupDevtools');\n    }\n\n    require('RCTDebugComponentOwnership');\n\n    // In order to use Cmd+P to record/dump perf data, we need to make sure\n    // this module is available in the bundle\n    require('RCTRenderingPerf');\n\n    // Set up inspector\n    const JSInspector = require('JSInspector');\n    JSInspector.registerAgent(require('NetworkAgent'));\n  }\n}\n\n// Just to make sure the JS gets packaged up. Wait until the JS environment has\n// been initialized before requiring them.\nBatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', () => require('RCTDeviceEventEmitter'));\nBatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', () => require('RCTNativeAppEventEmitter'));\nBatchedBridge.registerLazyCallableModule('PerformanceLogger', () => require('PerformanceLogger'));\n"]}]