["14a08e7429dbdfffd83bdf28e7f6ebf4bd9e87dd","72b894792bb02fe4bf8d93d4f24d7821730c94b9",["JSTimersExecution","Platform","NativeModules","fbjs/lib/performanceNow","parseErrorStack"],[48,93,130,208,732],{"version":3,"sources":["/firstPro/node_modules/react-native/Libraries/Core/Timers/JSTimers.js"],"names":["JSTimersExecution","require","Platform","Timing","performanceNow","_getFreeIndex","freeIndex","timerIDs","indexOf","length","_allocateCallback","func","type","id","GUID","callbacks","types","__DEV__","parseErrorStack","e","Error","framesToPop","stack","identifiers","shift","_freeCallback","timerID","index","_clearIndex","deleteTimer","MAX_TIMER_DURATION_MS","IS_ANDROID","OS","ANDROID_LONG_TIMER_MESSAGE","JSTimers","setTimeout","duration","args","console","warn","apply","undefined","createTimer","Date","now","setInterval","setImmediate","immediates","push","requestAnimationFrame","requestIdleCallback","options","requestIdleCallbacks","setSendIdleEvents","timeout","timeoutId","requestIdleCallbackTimeouts","get","clearTimeout","delete","deadline","splice","callTimer","set","cancelIdleCallback","clearInterval","clearImmediate","cancelAnimationFrame","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule JSTimers\n * @flow\n */\n'use strict';\n\n// Note that the module JSTimers is split into two in order to solve a cycle\n// in dependencies. NativeModules > BatchedBridge > MessageQueue > JSTimersExecution\nconst JSTimersExecution = require('JSTimersExecution');\nconst Platform = require('Platform');\n\nconst {Timing} = require('NativeModules');\nconst performanceNow = require('fbjs/lib/performanceNow');\n\nimport type {JSTimerType} from 'JSTimersExecution';\n\n// Returns a free index if one is available, and the next consecutive index otherwise.\nfunction _getFreeIndex(): number {\n  let freeIndex = JSTimersExecution.timerIDs.indexOf(null);\n  if (freeIndex === -1) {\n    freeIndex = JSTimersExecution.timerIDs.length;\n  }\n  return freeIndex;\n}\n\nfunction _allocateCallback(func: Function, type: JSTimerType): number {\n  const id = JSTimersExecution.GUID++;\n  const freeIndex = _getFreeIndex();\n  JSTimersExecution.timerIDs[freeIndex] = id;\n  JSTimersExecution.callbacks[freeIndex] = func;\n  JSTimersExecution.types[freeIndex] = type;\n  if (__DEV__) {\n    const parseErrorStack = require('parseErrorStack');\n    const e = (new Error() : any);\n    e.framesToPop = 1;\n    const stack = parseErrorStack(e);\n    if (stack) {\n      JSTimersExecution.identifiers[freeIndex] = stack.shift();\n    }\n  }\n  return id;\n}\n\nfunction _freeCallback(timerID: number) {\n  // JSTimersExecution.timerIDs contains nulls after timers have been removed;\n  // ignore nulls upfront so indexOf doesn't find them\n  if (timerID == null) {\n    return;\n  }\n\n  const index = JSTimersExecution.timerIDs.indexOf(timerID);\n  // See corresponding comment in `callTimers` for reasoning behind this\n  if (index !== -1) {\n    JSTimersExecution._clearIndex(index);\n    const type = JSTimersExecution.types[index];\n    if (type !== 'setImmediate' && type !== 'requestIdleCallback') {\n      Timing.deleteTimer(timerID);\n    }\n  }\n}\n\nconst MAX_TIMER_DURATION_MS = 60 * 1000;\nconst IS_ANDROID = Platform.OS === 'android';\nconst ANDROID_LONG_TIMER_MESSAGE =\n  'Setting a timer for a long period of time, i.e. multiple minutes, is a ' +\n  'performance and correctness issue on Android as it keeps the timer ' +\n  'module awake, and timers can only be called when the app is in the foreground. ' +\n  'See https://github.com/facebook/react-native/issues/12981 for more info.';\n\n/**\n * JS implementation of timer functions. Must be completely driven by an\n * external clock signal, all that's stored here is timerID, timer type, and\n * callback.\n */\nconst JSTimers = {\n  /**\n   * @param {function} func Callback to be invoked after `duration` ms.\n   * @param {number} duration Number of milliseconds.\n   */\n  setTimeout: function(func: Function, duration: number, ...args?: any): number {\n    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {\n      console.warn(\n          ANDROID_LONG_TIMER_MESSAGE + '\\n' + '(Saw setTimeout with duration ' +\n          duration + 'ms)');\n    }\n    const id = _allocateCallback(() => func.apply(undefined, args), 'setTimeout');\n    Timing.createTimer(id, duration || 0, Date.now(), /* recurring */ false);\n    return id;\n  },\n\n  /**\n   * @param {function} func Callback to be invoked every `duration` ms.\n   * @param {number} duration Number of milliseconds.\n   */\n  setInterval: function(func: Function, duration: number, ...args?: any): number {\n    if (__DEV__ && IS_ANDROID && duration > MAX_TIMER_DURATION_MS) {\n      console.warn(\n          ANDROID_LONG_TIMER_MESSAGE + '\\n' + '(Saw setInterval with duration ' +\n          duration + 'ms)');\n    }\n    const id = _allocateCallback(() => func.apply(undefined, args), 'setInterval');\n    Timing.createTimer(id, duration || 0, Date.now(), /* recurring */ true);\n    return id;\n  },\n\n  /**\n   * @param {function} func Callback to be invoked before the end of the\n   * current JavaScript execution loop.\n   */\n  setImmediate: function(func: Function, ...args?: any) {\n    const id = _allocateCallback(() => func.apply(undefined, args), 'setImmediate');\n    JSTimersExecution.immediates.push(id);\n    return id;\n  },\n\n  /**\n   * @param {function} func Callback to be invoked every frame.\n   */\n  requestAnimationFrame: function(func : Function) {\n    const id = _allocateCallback(func, 'requestAnimationFrame');\n    Timing.createTimer(id, 1, Date.now(), /* recurring */ false);\n    return id;\n  },\n\n  /**\n   * @param {function} func Callback to be invoked every frame and provided\n   * with time remaining in frame.\n   * @param {?object} options\n   */\n  requestIdleCallback: function(func : Function, options : ?Object) {\n    if (JSTimersExecution.requestIdleCallbacks.length === 0) {\n      Timing.setSendIdleEvents(true);\n    }\n\n    const timeout = options && options.timeout;\n    const id = _allocateCallback(\n      timeout != null ?\n        deadline => {\n          const timeoutId = JSTimersExecution.requestIdleCallbackTimeouts.get(id);\n          if (timeoutId) {\n            JSTimers.clearTimeout(timeoutId);\n            JSTimersExecution.requestIdleCallbackTimeouts.delete(id);\n          }\n          return func(deadline);\n        } :\n        func,\n      'requestIdleCallback'\n    );\n    JSTimersExecution.requestIdleCallbacks.push(id);\n\n    if (timeout != null) {\n      const timeoutId = JSTimers.setTimeout(() => {\n        const index = JSTimersExecution.requestIdleCallbacks.indexOf(id);\n        if (index > -1) {\n          JSTimersExecution.requestIdleCallbacks.splice(index, 1);\n          JSTimersExecution.callTimer(id, performanceNow(), true);\n        }\n        JSTimersExecution.requestIdleCallbackTimeouts.delete(id);\n        if (JSTimersExecution.requestIdleCallbacks.length === 0) {\n          Timing.setSendIdleEvents(false);\n        }\n      }, timeout);\n      JSTimersExecution.requestIdleCallbackTimeouts.set(id, timeoutId);\n    }\n    return id;\n  },\n\n  cancelIdleCallback: function(timerID: number) {\n    _freeCallback(timerID);\n    const index = JSTimersExecution.requestIdleCallbacks.indexOf(timerID);\n    if (index !== -1) {\n      JSTimersExecution.requestIdleCallbacks.splice(index, 1);\n    }\n\n    const timeoutId = JSTimersExecution.requestIdleCallbackTimeouts.get(timerID);\n    if (timeoutId) {\n      JSTimers.clearTimeout(timeoutId);\n      JSTimersExecution.requestIdleCallbackTimeouts.delete(timerID);\n    }\n\n    if (JSTimersExecution.requestIdleCallbacks.length === 0) {\n      Timing.setSendIdleEvents(false);\n    }\n  },\n\n  clearTimeout: function(timerID: number) {\n    _freeCallback(timerID);\n  },\n\n  clearInterval: function(timerID: number) {\n    _freeCallback(timerID);\n  },\n\n  clearImmediate: function(timerID: number) {\n    _freeCallback(timerID);\n    const index = JSTimersExecution.immediates.indexOf(timerID);\n    if (index !== -1) {\n      JSTimersExecution.immediates.splice(index, 1);\n    }\n  },\n\n  cancelAnimationFrame: function(timerID: number) {\n    _freeCallback(timerID);\n  },\n};\n\nmodule.exports = JSTimers;\n"]}]