["a691c0b747cdf807656b66a533cb80e211e3e948","c0fea58abe5ce2f7335a558b5a8f8d876c413791",["ReactDebugTool","ReactPerf","fbjs/lib/invariant","fbjs/lib/performanceNow"],[45,88,127,179],{"version":3,"sources":["/firstPro/node_modules/react-native/Libraries/Performance/RCTRenderingPerf.js"],"names":["ReactDebugTool","require","ReactPerf","invariant","performanceNow","perfModules","enabled","lastRenderStartTime","totalRenderDuration","RCTRenderingPerfDevtool","onBeginLifeCycleTimer","debugID","timerType","onEndLifeCycleTimer","lastRenderDuration","RCTRenderingPerf","toggle","console","log","start","addHook","forEach","module","stop","printInclusive","printWasted","removeHook","toFixed","register","push","exports"],"mappings":";AAWA;;AAEA,IAAIA,iBAAiBC,OAAjB,kBAAJ;AACA,IAAIC,YAAYD,OAAZ,aAAJ;;AAEA,IAAIE,YAAYF,OAAZ,sBAAJ;AACA,IAAIG,iBAAiBH,OAAjB,2BAAJ;;AAOA,IAAII,cAAc,EAAlB;AACA,IAAIC,UAAU,KAAd;AACA,IAAIC,sBAAsB,CAA1B;AACA,IAAIC,sBAAsB,CAA1B;;AAEA,IAAIC,0BAA0B;AAC5BC,uBAD4B,iCACNC,OADM,EACGC,SADH,EACc;AACxC,QAAIA,cAAc,QAAlB,EAA4B;AAC1BL,4BAAsBH,gBAAtB;AACD;AACF,GAL2B;AAM5BS,qBAN4B,+BAMRF,OANQ,EAMCC,SAND,EAMY;AACtC,QAAIA,cAAc,QAAlB,EAA4B;AAC1B,UAAIE,qBAAqBV,mBAAmBG,mBAA5C;AACAC,6BAAuBM,kBAAvB;AACD;AACF;AAX2B,CAA9B;;AAcA,IAAIC,mBAAmB;AAErBC,UAAQ,kBAAW;AACjBC,YAAQC,GAAR,CAAY,wCAAZ;AACAZ,cAAU,IAAV;AACD,GALoB;;AAOrBa,SAAO,iBAAW;AAChB,QAAI,CAACb,OAAL,EAAc;AACZ;AACD;;AAEDJ,cAAUiB,KAAV;AACAnB,mBAAeoB,OAAf,CAAuBX,uBAAvB;AACAJ,gBAAYgB,OAAZ,CAAoB,UAACC,MAAD;AAAA,aAAYA,OAAOH,KAAP,EAAZ;AAAA,KAApB;AACD,GAfoB;;AAiBrBI,QAAM,gBAAW;AACf,QAAI,CAACjB,OAAL,EAAc;AACZ;AACD;;AAEDJ,cAAUqB,IAAV;AACArB,cAAUsB,cAAV;AACAtB,cAAUuB,WAAV;AACAzB,mBAAe0B,UAAf,CAA0BjB,uBAA1B;;AAEAQ,YAAQC,GAAR,oCAA6CV,oBAAoBmB,OAApB,CAA4B,CAA5B,CAA7C;AACApB,0BAAsB,CAAtB;AACAC,0BAAsB,CAAtB;;AAEAH,gBAAYgB,OAAZ,CAAoB,UAACC,MAAD;AAAA,aAAYA,OAAOC,IAAP,EAAZ;AAAA,KAApB;AACD,GAhCoB;;AAkCrBK,YAAU,kBAASN,MAAT,EAA6B;AACrCnB,cACE,OAAOmB,OAAOH,KAAd,KAAwB,UAD1B,EAEE,0CAFF;AAIAhB,cACE,OAAOmB,OAAOC,IAAd,KAAuB,UADzB,EAEE,yCAFF;AAIAlB,gBAAYwB,IAAZ,CAAiBP,MAAjB;AACD;AA5CoB,CAAvB;;AA+CAA,OAAOQ,OAAP,GAAiBf,gBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule RCTRenderingPerf\n * @flow\n */\n'use strict';\n\nvar ReactDebugTool = require('ReactDebugTool');\nvar ReactPerf = require('ReactPerf');\n\nvar invariant = require('fbjs/lib/invariant');\nvar performanceNow = require('fbjs/lib/performanceNow');\n\ntype perfModule = {\n  start: () => void,\n  stop: () => void,\n}\n\nvar perfModules = [];\nvar enabled = false;\nvar lastRenderStartTime = 0;\nvar totalRenderDuration = 0;\n\nvar RCTRenderingPerfDevtool = {\n  onBeginLifeCycleTimer(debugID, timerType) {\n    if (timerType === 'render') {\n      lastRenderStartTime = performanceNow();\n    }\n  },\n  onEndLifeCycleTimer(debugID, timerType) {\n    if (timerType === 'render') {\n      var lastRenderDuration = performanceNow() - lastRenderStartTime;\n      totalRenderDuration += lastRenderDuration;\n    }\n  },\n};\n\nvar RCTRenderingPerf = {\n  // Once perf is enabled, it stays enabled\n  toggle: function() {\n    console.log('Render perfomance measurements enabled');\n    enabled = true;\n  },\n\n  start: function() {\n    if (!enabled) {\n      return;\n    }\n\n    ReactPerf.start();\n    ReactDebugTool.addHook(RCTRenderingPerfDevtool);\n    perfModules.forEach((module) => module.start());\n  },\n\n  stop: function() {\n    if (!enabled) {\n      return;\n    }\n\n    ReactPerf.stop();\n    ReactPerf.printInclusive();\n    ReactPerf.printWasted();\n    ReactDebugTool.removeHook(RCTRenderingPerfDevtool);\n\n    console.log(`Total time spent in render(): ${totalRenderDuration.toFixed(2)} ms`);\n    lastRenderStartTime = 0;\n    totalRenderDuration = 0;\n\n    perfModules.forEach((module) => module.stop());\n  },\n\n  register: function(module: perfModule) {\n    invariant(\n      typeof module.start === 'function',\n      'Perf module should have start() function'\n    );\n    invariant(\n      typeof module.stop === 'function',\n      'Perf module should have stop() function'\n    );\n    perfModules.push(module);\n  }\n};\n\nmodule.exports = RCTRenderingPerf;\n"]}]