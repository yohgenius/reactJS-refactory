["b9a01d3b4e5e236f377d669e5eecfff17a0f63da","c7b6d6d370424b57eb790e5bfe6a06b0064c63b5",["EmitterSubscription","prop-types","RCTDeviceEventEmitter","React","ReactNative","StyleSheet","View","Inspector","YellowBox"],[72,120,171,217,253,294,328,1573,2602],{"version":3,"sources":["/firstPro/node_modules/react-native/Libraries/ReactNative/AppContainer.js"],"names":["EmitterSubscription","require","PropTypes","RCTDeviceEventEmitter","React","ReactNative","StyleSheet","View","AppContainer","state","inspector","mainKey","_subscription","rootTag","props","__DEV__","global","__RCTProfileIsProfiling","addListener","Inspector","findNodeHandle","_mainRef","updateInspectedViewTag","setState","s","remove","yellowBox","YellowBox","styles","appContainer","ref","children","Component","childContextTypes","number","create","flex","module","exports"],"mappings":";;AAYA;;;;AAEA,IAAMA,sBAAsBC,OAAtB,uBAAN;AACA,IAAMC,YAAYD,OAAZ,cAAN;AACA,IAAME,wBAAwBF,OAAxB,yBAAN;AACA,IAAMG,QAAQH,OAAR,SAAN;AACA,IAAMI,cAAcJ,OAAd,eAAN;AACA,IAAMK,aAAaL,OAAb,cAAN;AACA,IAAMM,OAAON,OAAP,QAAN;;IAcMO,Y;;;;;;;;;;;;;;8MAEJC,K,GAAe;AACbC,iBAAW,IADE;AAEbC,eAAS;AAFI,K,QAKfC,a,GAAsC,I;;;;;sCAMX;AACzB,aAAO;AACLC,iBAAS,KAAKC,KAAL,CAAWD;AADf,OAAP;AAGD;;;wCAEyB;AAAA;;AACxB,UAAIE,OAAJ,EAAa;AACX,YAAI,CAACC,OAAOC,uBAAZ,EAAqC;AACnC,eAAKL,aAAL,GAAqBT,sBAAsBe,WAAtB,CACnB,wBADmB,EAEnB,YAAM;AACJ,gBAAMC,YAAYlB,OAAZ,aAAN;AACA,gBAAMS,YAAY,OAAKD,KAAL,CAAWC,SAAX,GACd,IADc,GAEd,oBAAC,SAAD;AACE,gCAAkBL,YAAYe,cAAZ,CAA2B,OAAKC,QAAhC,CADpB;AAEE,oCAAsB,8BAACC,sBAAD,EAA4B;AAChD,uBAAKC,QAAL,CACE,UAACC,CAAD;AAAA,yBAAQ,EAACb,SAASa,EAAEb,OAAF,GAAY,CAAtB,EAAR;AAAA,iBADF,EAEE;AAAA,yBAAMW,uBACJjB,YAAYe,cAAZ,CAA2B,OAAKC,QAAhC,CADI,CAAN;AAAA,iBAFF;AAMD;AATH,cAFJ;AAaA,mBAAKE,QAAL,CAAc,EAACb,oBAAD,EAAd;AACD,WAlBkB,CAArB;AAoBD;AACF;AACF;;;2CAE4B;AAC3B,UAAI,KAAKE,aAAT,EAAwB;AACtB,aAAKA,aAAL,CAAmBa,MAAnB;AACD;AACF;;;6BAE0B;AAAA;;AACzB,UAAIC,YAAY,IAAhB;AACA,UAAIX,OAAJ,EAAa;AACX,YAAI,CAACC,OAAOC,uBAAZ,EAAqC;AACnC,cAAMU,YAAY1B,OAAZ,aAAN;AACAyB,sBAAY,oBAAC,SAAD,OAAZ;AACD;AACF;;AAED,aACE;AAAC,YAAD;AAAA,UAAM,OAAOE,OAAOC,YAApB,EAAkC,eAAc,UAAhD;AACE;AAAC,cAAD;AAAA;AACE,yBAAa,CAAC,KAAKpB,KAAL,CAAWC,SAD3B;AAEE,iBAAK,KAAKD,KAAL,CAAWE,OAFlB;AAGE,2BAAc,UAHhB;AAIE,mBAAOiB,OAAOC,YAJhB,EAI8B,KAAK,aAACC,KAAD,EAAS;AAAC,qBAAKT,QAAL,GAAgBS,KAAhB;AAAqB,aAJlE;AAKG,eAAKhB,KAAL,CAAWiB;AALd,SADF;AAQGL,iBARH;AASG,aAAKjB,KAAL,CAAWC;AATd,OADF;AAaD;;;EA1EwBN,MAAM4B,S,UASxBC,iB,GAAoB;AACzBpB,WAASX,UAAUgC;AADM,C;;;AAoE7B,IAAMN,SAAStB,WAAW6B,MAAX,CAAkB;AAC/BN,gBAAc;AACZO,UAAM;AADM;AADiB,CAAlB,CAAf;;AAMAC,OAAOC,OAAP,GAAiB9B,YAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AppContainer\n * @flow\n */\n\n'use strict';\n\nconst EmitterSubscription = require('EmitterSubscription');\nconst PropTypes = require('prop-types');\nconst RCTDeviceEventEmitter = require('RCTDeviceEventEmitter');\nconst React = require('React');\nconst ReactNative = require('ReactNative');\nconst StyleSheet = require('StyleSheet');\nconst View = require('View');\n\ntype Context = {\n  rootTag: number,\n};\ntype Props = {\n  children?: React.Children,\n  rootTag: number,\n};\ntype State = {\n  inspector: ?React.Element<*>,\n  mainKey: number,\n};\n\nclass AppContainer extends React.Component {\n  props: Props;\n  state: State = {\n    inspector: null,\n    mainKey: 1,\n  };\n  _mainRef: ?React.Element<*>;\n  _subscription: ?EmitterSubscription = null;\n\n  static childContextTypes = {\n    rootTag: PropTypes.number,\n  };\n\n  getChildContext(): Context {\n    return {\n      rootTag: this.props.rootTag,\n    };\n  }\n\n  componentDidMount(): void {\n    if (__DEV__) {\n      if (!global.__RCTProfileIsProfiling) {\n        this._subscription = RCTDeviceEventEmitter.addListener(\n          'toggleElementInspector',\n          () => {\n            const Inspector = require('Inspector');\n            const inspector = this.state.inspector\n              ? null\n              : <Inspector\n                  inspectedViewTag={ReactNative.findNodeHandle(this._mainRef)}\n                  onRequestRerenderApp={(updateInspectedViewTag) => {\n                    this.setState(\n                      (s) => ({mainKey: s.mainKey + 1}),\n                      () => updateInspectedViewTag(\n                        ReactNative.findNodeHandle(this._mainRef)\n                      )\n                    );\n                  }}\n                />;\n            this.setState({inspector});\n          },\n        );\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this._subscription) {\n      this._subscription.remove();\n    }\n  }\n\n  render(): React.Element<*> {\n    let yellowBox = null;\n    if (__DEV__) {\n      if (!global.__RCTProfileIsProfiling) {\n        const YellowBox = require('YellowBox');\n        yellowBox = <YellowBox />;\n      }\n    }\n\n    return (\n      <View style={styles.appContainer} pointerEvents=\"box-none\">\n        <View\n          collapsable={!this.state.inspector}\n          key={this.state.mainKey}\n          pointerEvents=\"box-none\"\n          style={styles.appContainer} ref={(ref) => {this._mainRef = ref;}}>\n          {this.props.children}\n        </View>\n        {yellowBox}\n        {this.state.inspector}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appContainer: {\n    flex: 1,\n  },\n});\n\nmodule.exports = AppContainer;\n"]}]